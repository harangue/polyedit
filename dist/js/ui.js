(function() {
  var Editor, Ui;

  Editor = require(rootDir + 'editor.js');

  Ui = (function() {
    function Ui(main) {
      this.main = main;
      this.zoom = 1;
      $(window).resize(this.resize);
      this.resize();
    }

    Ui.prototype.startLoading = function(header) {
      switch (header) {
        case 'files':
          return $("#files .header .loader").show();
        case 'sprites':
          return $("#sprites .header .loader").show();
      }
    };

    Ui.prototype.stopLoading = function(header) {
      switch (header) {
        case 'files':
          return $("#files .header .loader").hide();
        case 'sprites':
          return $("#sprites .header .loader").hide();
      }
    };

    Ui.prototype.setEditor = function(sprite) {
      var ref, ref1, zoom;
      if (this.editor) {
        this.editor["delete"]();
      }
      this.editor = new Editor(this.main);
      if ((ref = this.main.data) != null) {
        if ((ref1 = ref.settings) != null) {
          ref1.open = sprite.key;
        }
      }
      $(".sprite-listing").removeClass('editor');
      $(".sprite-listing[data-id=" + sprite.id + "]").addClass('editor');
      $(".tools").show();
      $(".canvas").show().find(".sprite-image").attr('src', sprite.path);
      $(".sprite-image").unbind('load').load((function(_this) {
        return function() {
          var zoom;
          zoom = Math.max(1, Math.min(10, Math.floor($("#editor").width() / $(".sprite-image")[0].naturalWidth * 3 / 4)));
          $(".zoom-box").val(zoom * 100);
          return _this.setZoom(zoom * 100);
        };
      })(this));
      this.editor.start(sprite.data);
      if (this.main.justOpened && this.main.data.settings.zoom) {
        zoom = Math.max(1, Math.min(10, Math.floor($("#editor").width() / $(".sprite-image")[0].naturalWidth * 3 / 4)));
        $(".zoom-box").val(zoom * 100);
        this.setZoom(zoom * 100);
      }
      return this.main.justOpened = false;
    };

    Ui.prototype.setActive = function(sprite) {
      var el;
      el = $(".sprite-listing[data-id=" + sprite.id + "]");
      return el.addClass('activeSprite');
    };

    Ui.prototype.setInactive = function(sprite) {
      var el;
      el = $(".sprite-listing[data-id=" + sprite.id + "]");
      return el.removeClass('activeSprite');
    };

    Ui.prototype.addSprite = function(sprite) {
      var extraClass, match;
      match = _.findWhere(this.main.data.sprites, {
        key: sprite.key
      });
      if (match && match.data) {
        extraClass = "activeSprite";
      } else {
        extraClass = "";
      }
      $("<a />", {
        "href": '#',
        "data-id": sprite.id,
        "class": "list-group-item sprite-listing " + extraClass
      }).append($("<div />", {
        "class": "list-group-item-float"
      }).append($("<img />", {
        "class": 'icon',
        "src": sprite.path
      }))).append($("<div />", {
        "class": "list-group-item-float"
      }).append($("<span />", {
        "class": "title",
        "text": sprite.name
      }))).append($("<div />", {
        "class": 'path',
        "text": sprite.key
      })).appendTo("#sprites .list-group");
      return this.resize();
    };

    Ui.prototype.updateSprite = function(sprite) {
      var el;
      el = $(".sprite-listing[data-id=" + sprite.id + "]");
      el.find(".icon").attr('src', sprite.path);
      el.find(".title").text(sprite.name);
      el.find(".path").text(sprite.key);
      return this.resize();
    };

    Ui.prototype.reset = function() {
      var settings;
      settings = this.main.data.settings;
      $("#sprites .list-group").html('');
      $("#sprites .search-box").val('');
      $("#sprites .active-box").val('off');
      $(".canvas").hide();
      $("#properties .exporter-box").val(settings.exporter);
      $(".left").width(settings.leftWidth);
      $("#properties").width(settings.rightWidth);
      if (settings.zoom) {
        this.setZoom(settings.zoom);
      }
      return this.resize();
    };

    Ui.prototype.resize = function() {
      return $("#editor").width($(".bottom").width() - $(".left").width() - $("#properties").width() - 2);
    };

    Ui.prototype.setZoom = function(zoom) {
      var ref;
      this.main.data.settings.zoom = zoom;
      this.zoom = zoom / 100;
      if ((ref = this.editor) != null) {
        ref.handleZoom();
      }
      $(".sprite-image").width($(".sprite-image")[0].naturalWidth * this.zoom).height($(".sprite-image")[0].naturalHeight * this.zoom);
      return $(".canvas").width($(".sprite-image").width()).height($(".sprite-image").height()).css('background-size', (this.zoom * 2) + "px " + (this.zoom * 2) + "px");
    };

    return Ui;

  })();

  module.exports = Ui;

}).call(this);

//# sourceMappingURL=data:application/json;base64,